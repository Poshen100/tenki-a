<!DOCTYPE html>
<html lang="zh-TW">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>TENKI 掃描按鈕 - 完整視覺展示</title>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap" rel="stylesheet">
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
      background: linear-gradient(135deg, #F5F5F5 0%, #E8ECEF 100%);
      min-height: 100vh;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      padding: 20px;
    }

    .demo-container {
      text-align: center;
      max-width: 400px;
      width: 100%;
    }

    .title {
      font-size: 24px;
      font-weight: 600;
      color: #0A2E6E;
      margin-bottom: 40px;
      letter-spacing: 0.5px;
    }

    .scan-button-container {
      display: flex;
      justify-content: center;
      align-items: center;
      padding: 40px 20px;
      background: rgba(255, 255, 255, 0.8);
      border-radius: 20px;
      backdrop-filter: blur(10px);
      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
      margin-bottom: 30px;
    }

    .scan-button {
      position: relative;
      width: 120px;
      height: 120px;
      background: linear-gradient(145deg, #0A2E6E, #0B3A8A);
      border-radius: 50%;
      border: none;
      cursor: pointer;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      box-shadow: 
        0 4px 8px rgba(0, 0, 0, 0.1),
        0 0 0 1px rgba(255, 255, 255, 0.1) inset;
      transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
      overflow: hidden;
      touch-action: manipulation;
    }

    .scan-button:hover {
      transform: translateY(-2px);
      box-shadow: 
        0 8px 20px rgba(10, 46, 110, 0.3),
        0 0 0 1px rgba(255, 255, 255, 0.2) inset;
    }

    .scan-button:active {
      transform: translateY(0px) scale(0.95);
      box-shadow: 
        0 2px 4px rgba(0, 0, 0, 0.2),
        0 0 0 1px rgba(255, 255, 255, 0.1) inset;
      background: linear-gradient(145deg, #0B3A8A, #0A2E6E);
      transition: all 0.1s ease;
    }

    .scan-ripple {
      position: absolute;
      border-radius: 50%;
      background: rgba(255, 255, 255, 0.4);
      transform: scale(0);
      animation: scan-ripple-animation 0.6s linear;
      pointer-events: none;
    }

    @keyframes scan-ripple-animation {
      to {
        transform: scale(4);
        opacity: 0;
      }
    }

    .scan-button:active .energy-ring {
      animation-play-state: paused;
    }

    .scan-icon {
      width: 40px;
      height: 40px;
      stroke: white;
      stroke-width: 2.5px;
      stroke-linecap: round;
      stroke-linejoin: round;
      fill: none;
      margin-bottom: 8px;
      transition: transform 0.1s ease;
    }

    .scan-button:active .scan-icon {
      transform: scale(0.9);
    }

    .scan-wave {
      filter: drop-shadow(0 0 4px rgba(255, 255, 255, 0.5));
    }

    .scan-text {
      color: white;
      font-family: 'Inter', sans-serif;
      font-weight: 500;
      font-size: 16px;
      line-height: 1.2;
      letter-spacing: 0.8px;
      text-transform: uppercase;
      transition: transform 0.1s ease;
      text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
    }

    .scan-button:active .scan-text {
      transform: scale(0.9);
    }

    .energy-ring {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      border-radius: 50%;
      opacity: 0.7;
      animation: pulse 2s infinite ease-out;
    }

    .energy-ring:nth-of-type(1) {
      width: 140px;
      height: 140px;
      border: 1px dashed #D4AF37;
      animation-delay: 0s;
    }

    .energy-ring:nth-of-type(2) {
      width: 160px;
      height: 160px;
      border: 1px dashed rgba(212, 175, 55, 0.6);
      animation-delay: 0.7s;
    }

    @keyframes pulse {
      0% {
        transform: translate(-50%, -50%) scale(0.8);
        opacity: 0.7;
      }
      50% {
        transform: translate(-50%, -50%) scale(1.1);
        opacity: 0.4;
      }
      100% {
        transform: translate(-50%, -50%) scale(1.3);
        opacity: 0;
      }
    }

    .instructions {
      background: rgba(255, 255, 255, 0.9);
      padding: 20px;
      border-radius: 12px;
      margin-top: 20px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    .instructions h3 {
      color: #0A2E6E;
      margin-bottom: 10px;
      font-size: 18px;
    }

    .instructions p {
      color: #666;
      font-size: 14px;
      line-height: 1.5;
      margin-bottom: 8px;
    }

    .status {
      margin-top: 20px;
      padding: 15px;
      background: linear-gradient(90deg, #0A2E6E, #D4AF37);
      color: white;
      border-radius: 8px;
      font-weight: 500;
      display: none;
    }

    @media (max-width: 480px) {
      .scan-button {
        width: 100px;
        height: 100px;
      }
      
      .scan-text {
        font-size: 14px;
      }
      
      .scan-icon {
        width: 32px;
        height: 32px;
      }
    }
  </style>
</head>
<body>
  <div class="demo-container">
    <h1 class="title">TENKI 掃描按鈕</h1>
    
    <div class="scan-button-container">
      <button class="scan-button" id="scanBtn">
        <!-- 金色能量環 -->
        <div class="energy-ring"></div>
        <div class="energy-ring"></div>
        
        <!-- 掃描圖示 - 雷達波紋 -->
        <svg class="scan-icon scan-wave" viewBox="0 0 40 40">
          <defs>
            <radialGradient id="scanGlow" cx="50%" cy="50%">
              <stop offset="0%" style="stop-color:white;stop-opacity:0.8" />
              <stop offset="100%" style="stop-color:white;stop-opacity:0" />
            </radialGradient>
          </defs>
          <circle cx="20" cy="20" r="3" fill="url(#scanGlow)">
            <animate attributeName="r" values="3;6;3" dur="1.5s" repeatCount="indefinite"/>
            <animate attributeName="opacity" values="1;0.5;1" dur="1.5s" repeatCount="indefinite"/>
          </circle>
          <circle cx="20" cy="20" r="5" fill="none" stroke="white" stroke-width="1.5">
            <animate attributeName="r" values="5;8;5" dur="1.8s" repeatCount="indefinite" begin="0.4s"/>
            <animate attributeName="opacity" values="0.6;1;0.6" dur="1.8s" repeatCount="indefinite" begin="0.4s"/>
          </circle>
          <circle cx="20" cy="20" r="7" fill="none" stroke="white" stroke-width="1">
            <animate attributeName="r" values="7;10;7" dur="2s" repeatCount="indefinite" begin="0.8s"/>
            <animate attributeName="opacity" values="0.3;0.7;0.3" dur="2s" repeatCount="indefinite" begin="0.8s"/>
          </circle>
        </svg>
        
        <!-- SCAN 文字 -->
        <span class="scan-text">SCAN</span>
        
        <!-- 波紋效果容器 -->
        <div class="scan-ripple" id="ripple"></div>
      </button>
    </div>

    <div class="status" id="status">掃描啟動中...</div>

    <div class="instructions">
      <h3>📱 操作說明</h3>
      <p>• <strong>滑鼠懸停</strong>：按鈕輕微上浮，陰影增強</p>
      <p>• <strong>點擊按下</strong>：縮放壓縮 + 波紋擴散效果</p>
      <p>• <strong>金色能量環</strong>：持續脈動，暗示準備狀態</p>
      <p>• <strong>響應式設計</strong>：自動適配手機和平板</p>
    </div>
  </div>

  <script>
    const scanBtn = document.getElementById('scanBtn');
    const ripple = document.getElementById('ripple');
    const status = document.getElementById('status');

    function createRipple(event) {
      const button = event.currentTarget;
      const rect = button.getBoundingClientRect();
      const size = Math.max(rect.width, rect.height);
      const x = (event.clientX || event.touches[0].clientX) - rect.left - size / 2;
      const y = (event.clientY || event.touches[0].clientY) - rect.top - size / 2;
      
      ripple.style.width = ripple.style.height = size + 'px';
      ripple.style.left = x + 'px';
      ripple.style.top = y + 'px';
      ripple.classList.remove('scan-ripple');
      void ripple.offsetWidth;
      ripple.classList.add('scan-ripple');
    }

    // 事件監聽
    scanBtn.addEventListener('mousedown', createRipple);
    scanBtn.addEventListener('touchstart', (e) => {
      e.preventDefault();
      createRipple(e);
    }, { passive: false });

    scanBtn.addEventListener('click', () => {
      status.style.display = 'block';
      status.textContent = '掃描完成！';
      
      setTimeout(() => {
        status.style.display = 'none';
      }, 2000);
      
      // 這裡可以添加實際的掃描邏輯
      console.log('🔍 TENKI 掃描啟動 - 偵測環境數據...');
    });

    // 動畫完成後重置波紋
    ripple.addEventListener('animationend', () => {
      ripple.style.display = 'none';
    });

    ripple.addEventListener('animationstart', () => {
      ripple.style.display = 'block';
    });
  </script>
</body>
</html>
